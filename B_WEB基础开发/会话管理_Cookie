会话管理
	浏览器开启到浏览资源到关闭的过程
	
	Cookie是客户端技术
		以下摘自API
			Creates a cookie, a small amount of information sent by a servlet to a Web browser, saved by the browser, and later sent back to the server.
			A cookie's value can uniquely identify a client, so cookies are commonly used for session management. 
			cookie存放web服务器发送的信息，保存在浏览器，能发送回服务器，并唯一确定客户信息。
			
			A cookie has a name, a single value, and optional attributes such as a comment, path and domain qualifiers, a maximum age, and a version number. 
			Some Web browsers have bugs in how they handle the optional attributes, so use them sparingly to improve the interoperability of your servlets. 
			cookie的属性：
				name：必须
				value：必须
				comment：可选
				path：可选，访问地址的URI与该path匹配时，即startwith时，就带上该cookie去访问网站
				domain：可选，网站域名
				maximum age：可选，int型，单位是秒
				version number：可选
			
			The servlet sends cookies to the browser by using the HttpServletResponse.addCookie(javax.servlet.http.Cookie) method, which adds fields to HTTP response headers to send cookies to the browser, one at a time. 
			The browser is expected to support 20 cookies for each Web server, 300 cookies total, and may limit cookie size to 4 KB each. 
			HttpServletResponse.addCookie(javax.servlet.http.Cookie)方法向浏览器发送cookie，方式为放在响应头上。
			浏览器同一站点支持20个cookie，共支持300个，每个大小限制为4kb以下
			
			The browser returns cookies to the servlet by adding fields to HTTP request headers. 
			Cookies can be retrieved from a request by using the HttpServletRequest.getCookies() method. Several cookies might have the same name but different path attributes. 
			浏览器通过请求头向服务器发送cookie，通过HttpServletRequest.getCookies()方法获得。
			cookie通过name、path和domain来区分
			
		cookie的生命周期
			不设置的话，生命周期就是会话过程，存在于浏览器的内存中
			想要留存，设置maximum age即可
		
		Cookie示例：
			/SimpleGOD/src/top/trial/servlet/CookieDemoServlet.java
			
			简单浏览历史演示：
			/SimpleGOD/src/top/trial/servlet/BookMarketServlet.java【/BookMarketServlet】
			/SimpleGOD/src/top/trial/servlet/BookDetailServlet.java
		
		
	