工厂方法模式
	抽象工厂类负责定义创建对象的接口，具体对象的创建工作由继承抽象工厂的具体类实现。
	
	通过让子类决定该创建的对象是什么来达到将对象创建的过程封装的目的。
	
	优点：
		客户端不需要再负责对象的创建，从而明确了各个类的职责，如新增对象，只需增加一个具体的类和具体的工厂类即可，不影响已有代码，易于维护，拓展性强。
		克服了简单工厂模式的缺点
	缺点：
		需额外编写代码，增加开发量
		在使用时耦合了具体的工厂类实现类
		
	实现：
		创建一个抽象类，有一个抽象的创建对象的方法；
		每有一个类需要创建对象，就要写一个对应的类及继承抽象工厂类的工厂类，实现创建对象的方法；
		创建对象时，创建工厂类对象，调用创建对象方法即可。
    示例：
        java-base/src/main/java/top/trial/designPattern/factoryMethod