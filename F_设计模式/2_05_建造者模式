建造者模式
    将一个复杂的构建与其表示相分离，使得同样的构建过程可以创建不同的表示。

    主要解决的问题是：复杂对象创建工作中，各部分子对象经常变化而组合子对象为复杂对象的流程算法固定的情况

    关键角色：
        建造者接口：声明了创建和提供实例的方法
        具体建造者：实现建造者接口
        指挥者：直接与使用者交互

    优点： 1、建造者独立，易扩展。 2、便于控制细节风险。

    缺点： 1、产品必须有共同点，范围有限制。 2、如内部变化复杂，会有很多的建造类。

    注意事项：与工厂模式的区别是：建造者模式更加关注于零件装配的顺序。

    举例：
        快餐店，汉堡和冷饮是具体产品，其组合而成的套餐经常变化，如素食汉堡配可口可乐，牛肉汉堡配百事可乐等

    实现：
        产品接口，包含名称，价格，打包方式
        汉堡产品和冷饮产品抽象类实现产品接口
        具体汉堡和冷饮产品继承对应抽象类
        包装接口，包含打包流程
        纸盒和玻璃瓶两个包装实现类
        套餐类聚合产品接口，包含添加产品、计算总价、输出产品信息方法
        builder类具体实现创建套餐流程，返回套餐

    示例代码：
        top.trial.designPattern.prototypePattern包下