享元模式
    使用共享对象可有效地支持大量的细粒度的对象，主要用于减少创建对象的数量，以减少内存占用和提高性能。

    应用实例：
        1、JAVA 中的 String，如果有则返回，如果没有则创建一个字符串保存在字符串缓存池里面。
        2、数据库的连接池。
        3、Integer的-128到127的缓存

    使用：
        创建一个享元接口
        创建实现接口的实体类
        创建享元工厂，工厂中维护一个Map，用来存细粒度的对象，同时享元工厂提供回去对象的方法，根据key获取到则返回，获取不到则创建，添入map然后返回。