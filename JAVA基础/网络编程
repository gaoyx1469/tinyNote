网络编程
	实现网络互连的不同计算机运行的程序间可以进行数据交换
	
	网络模型：
		OSI：七层
			应用层：终端应用
			表示层：数据的加密解密，压缩解压缩
			会话层：数据传输通道
			传输层：定义传输的协议和端口号（UDP协议和TCP协议）
			网络层：数据进行IP的封装和解封装
			数据链路层：数据进行MAC地址的封装和解封装
			物理层：网线、光纤接口类型，介质传输速率，作用是传输比特流
		TCP/IP：四层
		
	网络编程三要素：
		IP：
			网络中计算机的唯一标识
			组成：网络段号+主机段号
			
			私有地址：在互联网上不使用，用在局域网上的
				10.X.X.X
				172.16.0.0 ~172.31.255.255
				169.254.X.X
				192.168.X.X
			回环地址：表示本机
				172.0.0.1
			广播地址：与所有人通信
				X.X.X.255
			网络地址：
				X.X.X.0
				
			查看本机IP：					ipconfig
			查看本机与指定IP间的通信是否有问题：	ping  IP地址
			
			InetAddress类：表示互联网协议（IP）地址
				该类无构造方法
				可由getByName方法，获取对象
		端口：
			逻辑端口，计算机中正在运行的程序的标识
			有效端口为0~65535
			0~1024为系统预留端口号
		协议：
			通信规则
			UDP：将数据源和目的地封装成数据包，不需要建立连接，数据包大小64K，不可靠，效率高
			TCP：建立连接形成数据通道（三次握手），在连接中传输大量数据，可靠，效率低
	
	Socket：网络套接字
		IP + 端口
		Socket编程：
			通信两端都要有Socket
			网络通信其实是Socket间通信
			数据在两个Socket间通过IO传输
			
	关键类
		InetAddress
		DatagramPacket
		DatagramSocket
	
	示例：
		/SimpleGOD/src/top/tiral/socket/UDPSendDemo.java
		/SimpleGOD/src/top/tiral/socket/UDPReceiveDemo.java
		
			
		
		