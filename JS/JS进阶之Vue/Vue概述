Vue
	前端开发由表现为主转变为由应用为主，前后端分离
	传统开发模式以DOM为中心，jQuery工具库提供易用API，提高开发效率。
	
	Vue是一个渐进式的JS框架
	Vue2.0技术栈：
		webpack打包工具
			初始化配置文件   npm init
			本地局部安装 npm install webpack -save-dev
			安装webpack-dev-sever命令：npm install webpack-dev-sever -save-dev
		Vue.js
		node.js
		
		Vuex（状态管理插件）
		Vue-router（前端路由管理插件）  router-link标签      			index组件中配置，vue文件中应用
			前端路由
		Axios（异步请求插件）安装：cnpm install axios
			特征：
				从浏览器中创建XMLHttpRequest
				从node.js发出http请求
				支持Promise API
				拦截请求和响应
				转换请求和相应
				取消请求
				自动转换JSON数据
				客户端支持防止CSRF/XSRF
			使用：
				在main.js中加入：
					import axios from 'axios'
					Vue.prototype.$http = axios
		
	环境搭建：
		首先安装Node.js，替换npm为cnpm
		安装Vue-cli脚手架：cnpm install -g vue-cli
	项目构建：
		选择一项目构建目录，cmd进入该目录下
		创建项目：vue init webpack 项目名
		cmd进入项目目录，输入cnpm install安装项目依赖（安装在node_modules）
		cmd输入npm run dev运行项目
	开发工具
		见JS概述中推荐的开发工具
	打包编译
		npm run build     打包到dist目录下
		
	Vue单文件组件由三部分组成：
		template：html代码
		script：js代码
		style：css代码
		
		vue文件由Vue loader加载执行，将单文件组件进行转换，然后通过webpack打包文件进行打包编译，将其转换成浏览器识别的HTML/JS/CSS
		
	Vue示例与数据绑定
		创建实例 new Vue({})
		挂载元素 el:'#app'
		设置数据 data:{}
		模板渲染 <h1>{{ title }}</h1>
		