基本功能
    单表CRUD
        案例代码
            GameEntity
            GameEntityDao
            GameEntityMapper.xml
            MybatisConfig.xml
            GameEntityDaoTest
        注意点
            1、单参数的入参SQL中可以不用与参数名一致
            2、自增主键，插入时主键值的获取方式
    参数和返回值设置
        实体类属性与表列名不一致的情况：
            方法一：修改SQL语句，查询结果起别名以匹配实体类属性
            方法二：映射文件中配置resultMap，匹配列名与实体类属性的对应关系，具体参考GameEntityMapper.xml
    DAO编写
        编写实现类，调用session的selectOne/select/selectList/delete/insert/update方法并自己处理返回值

    配置文件细节
        properties标签
        alias标签
        alias标签下的package标签
        mapper标签下的package标签

        以上参考MybatisConfig.xml中对应内容


    连接池技术
        mybatis连接池分类【配置在主配置文件dataSource中】
            POOLED      采用传统的javax.sql.DataSource规范中的连接池，mybatis针对规范有自己的实现
                            空闲池、活动池
            UNPOOLED    采用传统的获取连接的方式，实现了javax.sql.DataSource接口，但是没有采用池的思想，每次获取都是新建连接
                            直接按传统JDBC基础方式获取一个链接
            JNDI        采用服务器提供的JNDI技术来实现获取DataSource，不同服务器实现效果不同，仅支持web或maven项目的war包工程
                        JNDI(Java Naming and Directory Interface [Java命名和目录接口])
                            Tomcat服务器使用的是DBCP连接池技术
                            使用方式：
                                配置：src\main\webapp\META-INF\mybatisJNDIContext.xml
                                主配置文件引用该配置


    事务控制
        什么是事务
        事务四大特性ACID？
        不考虑事务隔离性会产生的3个问题
        四中隔离级别？

        设置session自动提交【不常用】
            openSession方法增加参数true

    基于XML配置的动态SQL语句
        映射文件的几个标签
            <if>
                条件判断，用法参见GameEntityDaoTest中getGamesByProp方法
            <where>
                使用where标签包围if标签，可以替代where 1=1这种写法
            <foreach>
                主要用于sql语句中的in里的列举，用法参见GameEntityDaoTest中getGamesByIds方法
                注意
                    属性collection定义了要遍历的parameterType类中的属性
                    属性item定义了collection中每一个元素的别名
            <sql>
                抽取映射文件中公共的部分，定义一个id，通过include标签引用

    多表查询【一对多、多对多】
        表之间的关系
            一对多、多对一、一对一、多对多
            mybatis中将多对一和一对一都看成一对一
        示例：
            一对一、多对一、一对多
                ClassEntity
                StudentEntity
                StudentClassDao
                StudentClassMapper.xml
                MybatisConfig.xml
                StudentClassDaoTest
            多对多
                ClassEntity
                TeacherEntity
                ClassTeacherDao
                ClassTeacherMapper.xml
                MybatisConfig.xml
                ClassTeacherDaoTest
