实时系统分布式
	解决要点：实时交易、业务处理
	
	服务化应用架构Saas
	云化技术平台Paas
	云化基础设施Iaas
	
	优势：
		并发：单位时间快速计算能力
		异步：业务更快速响应的能力
		分布式部署：顺瞬时高并发访问能力
		松耦合：稳定、快速迭代能力
	
	概念：为了性能拓展和增强可靠性，将一个系统分拆成多个子系统并散布到不同设备
		拆分：基于业务需求和维护成本
	
	全局视图：
		技术范畴：
			分布式缓存、分布式消息队列、分布式注册中心、分布式配置中心、分布式数据库、分布式批处理
		业务范畴：
			服务拆分、服务编排、分布式事物
		管理范畴：
			持续集成、持续构建、持续交付、自动化测试、敏捷开发
		运维范畴：
			统一监控、统一日志、全链路跟踪、服务治理、资源编排、容器管理
		
	分布式架构与传统架构对比：
		开发部分：
			迭代开发
			微服务，轻量、维护便捷
			并行开发，效率高
			版本号可管理到组件，灵活
			组件解耦，代码复用率高
			持续集成，开发态到发布态自动化程度高
			
			人员分工更细，并行开发协调工作复杂
			服务拆分分库分表导致设计工作复杂
		架构部分：
			架构支持多节点部署，并发、异步处理
			水平横向扩展容易，增加节点即可线性扩展
			服务间耦合度低，降低相互间影响
			可容纳高并发访问
			局部、单点服务均可实现集群
			
			节点部署复杂，需实现自动化的服务管理
			引入注册中心、消息中心、配置中心、缓存中心、异常处理中心，架构复杂
			事务一致性控制困难，强调最终一致性
		运维部分：
			应用起停时间短
			容器化技术，屏蔽环境差异
			强调运维自动化
			
			复杂度高、需要自动化管理工具
			分布式架构新引入技术组件，监控指标支撑有限
			节点数量增加，运维复杂度高
		基础设施部分：
			依赖横向扩展，依赖多机器性能
			以PCServer为主，单机成本低
			
			PCServer稳定性小于小型机，需要资源冗余保障高可用
			
	Saas
		业务服务，调用APaas
	Paas
		APaas：应用运行平台-支撑业务应用
			分布式MQ、分布式数据库、分布式缓存、分布式批处理、
			分布式业务、分布式事务、分布式日志、分布式监控
			业务编排服务：
				服务开发框架
				前端开发框架
				移动开发框架
		IPaas：集成平台，通过接口对接Saas
			
	Iaas
		资源管理/资源服务API
			计算资源
			网络资源
			安全资源
			存储资源
	DevOps平台（流程管理维度）
		持续集成
		持续交付
		持续部署
		持续构建
		自动化测试
		版本管理
	云管平台
		资源编排
		弹性扩缩
		计费
		资源权限
		审计
		监控
		
	分布式实现方式：
		商用：稳定性好，有服务支持
		开源：成本低，可灵活替换和改造，团队技能积累
			