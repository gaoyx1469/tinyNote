树：
	结点数0个是空树
	结点大于等于1时，有且只有一个根结点，子树个数不限制但不能相交
	结点分类：
		根结点
		内部结点
		叶结点
	度：结点的子树个数
	深度：树中结点的最大层次
	树的存储结构：
		双亲表示法：每个结点组成队列，每一项由本身数据和双亲指针坐标，可增补第一个孩子结点和右兄弟结点指针
		孩子表示法：每个结点组成队列，每一项由本身数据和孩子结点组成的链表组成
		孩子兄弟表示法：每个结点组成队列，每一项由本身数据、第一个孩子结点指针、右兄弟结点指针组成---->变身二叉树
	二叉树：所有结点的度不大于2、有序
		斜二叉树：从根结点开始只有某一方向的子节点
		满二叉树：左右平衡且全满
		完全二叉树：最下层叶子结点一定集中在左部连续位置
		二叉树遍历：
			对于二叉树			A
					B				C
				D		E		F		G
			前序遍历：先根，后前序左，后前序右	ABDECFG
			中序遍历：先中序左，后根，后中序右	DBEAFCG
			后序遍历：先后续左，后后续右，后根	DEBFGCA
			层序遍历：从根结点开始一层一层遍历	ABCDEFG
			根据中序遍历+前序遍历或后序遍历可唯一确定一颗二叉树，根据前序遍历+后序遍历无法唯一确定一颗二叉树
		扩展二叉树：将二叉树所有结点补足左右子结点#表示，成为扩展二叉树，此时一个遍历序列即可唯一确定一颗二叉树
		线索二叉树：将#补充为前驱和后继的指针，为与左右孩子相区分，可增加标志位
	
	树转换为二叉树：
		兄弟结点间连线，去除双亲结点与第一个子结点外的其它结点的连线
	森林转换为二叉树：
		树转换二叉树，一次将后一个二叉树加到前一棵二叉树的根结点的右子结点
	二叉树转换为树：
		若某结点的左子结点存在，则将左子结点的右子结点、左子结点的右子结点的右子结点	...都连接到该结点上
		删除所有结点与右子结点的连线
		若根结点有右子结点，则拆分为森林
		
	赫夫曼树
		带权结点从小到大排序
		取最小的两个作为子结点组成一颗树，双亲节点的权为子结点的和
		继续排序并组成树
		赫夫曼树左枝为0右枝为1，叶结点可组成一组编码
			