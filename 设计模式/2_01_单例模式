单例模式
	确保类的对象在内存中只有一个，该实例必须自动创建并对外提供。
	
	优点：
		内存中只有一个对象，节约系统资源，不再频繁创建和销毁
	缺点：
		没有抽象层，难扩展
		职责过重，违背单一原则
		
	实现：
		1：构造方法私有
		2：成员位置自己创建一个对象
		3.通过一个公共方法提供访问
		
		
		饿汉式：
			类加载时直接产生对象
		public class Demo {
			private Demo(){}
			
			private static Demo demo = new Demo();
			
			public static Demo getDemo() {
				return demo;
			}
		}
		
		懒汉式：
			在首次用的时候才产生对象【可再升级为double check方式】
		public class Demo {
			private Demo(){}
			
			private static Demo demo = null;
			
			public synchronized static Demo getDemo() {
			
				if(demo == null){
					demo = new Demo();
				}
				return demo;
			}
		}