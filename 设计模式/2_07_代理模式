代理模式：
	为另一个对象提供一个替身或占位符以控制对这个对象的访问。
	
	
	远程代理RMI：
		RMI提供了客户辅助对象（stub桩）和服务辅助对象（skeleton骨架），为客户辅助对象创建和服务对象相同的方法。
		RMI也提供了所有运行时的基础设施。
		
		java.rmi.Remote接口，远程标记接口。
		制作一个远程接口继承此标记接口，其定义的所有方法都要throws RemoteException，方法返回值必须是源语类型或可序列化类型。
		制作一个远程实现实现远程接口，继承UnicastRemoteObject类以获得远程功能，设计一个无参构造throws RemoteException
		实例化远程实现，使用Naming.rebind(远程服务名，服务对象)方法注册该远程对象。
		
		客户端方法为Naming.lookup(远程服务ip和服务名)，如	rmi://127.0.0.1/RemoteHello
		
	虚拟代理：
		虚拟代理就是在一些创建开销大的对象创建出来之前，替代这些对象行使责任的模式
		比如展示大图片，加载出现前先显示加载中的一个替代图。
		
	动态代理：
		参考类加载器和反射部分