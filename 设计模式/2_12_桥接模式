桥接模式：
    思想：当实现可能有多个维度的变化时，将继承改为聚合，即将次幂种编码可能性优化为乘积种可能性

    使用场景：
        1、如果一个系统需要在构件的抽象化角色和具体化角色之间增加更多的灵活性，避免在两个层次之间建立静态的继承联系，通过桥接模式可以使它们在抽象层建立一个关联关系。
        2、对于那些不希望使用继承或因为多层次继承导致系统类的个数急剧增加的系统，桥接模式尤为适用。
        3、一个类存在两个独立变化的维度，且这两个维度都需要进行扩展。【常见】

    举例：
        手机分品牌和形状，不同品牌和形状的手机，功能上有差别，传统方式是品牌与形状的全排列，给出手机的实现。
        使用桥接模式
            将手机品牌作为手机的一个聚合属性
            多种形状手机作为子类继承手机类，同时聚合手机品牌
            使用者实例化想要的形状的手机，并初始化手机品牌作为参数传给手机，以实现功能
        注意：
            桥接模式需要多种不同属性相互之间没有影响的情况。