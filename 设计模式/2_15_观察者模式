观察者模式：
	定义了对象间的一对多依赖，当一个对象改变状态时，它的所有依赖者都会收到通知并自动更新。主题与观察者直接松耦合。
	
	举例：
		气象站观测气象信息，发布多种不同公告板数据，公告板可松耦合增减。
		建立主题接口，定义注册观察者、移除观察者、通知观察者三个方法；
		建立观察者接口，定义更新看板数据方法；
		建立展示接口，定义展示方法；
		创建气象数据类，实现主题接口，定义观察者集合属性、各种气象数据属性，构造方法初始化集合，实现注册观察者、移除观察者、通知观察者三个方法，定义观测气象信息改变方法；
		创建布告板类，实现观察者接口和展示接口，定义气象数据类属性、用到的气象数据属性，构造方法初始化气象数据对象，实现接口方法；
		创建气象站类，main方法中创建气象数据类对象和各种布告板类对象。
		
		以上，将气象数据属性全部作为通知观察者方法参数传递给观察者，如果增加新的属性，改动会很大；可以在气象数据类为气象数据属性增加getter方法，观察者自己获取有用属性。
		
		增加setChanged方法，以对参数变动进行筛选，以免所有变动都通知观察者，而是过滤后通知。